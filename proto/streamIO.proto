syntax = "proto3";


package streamIO;

option go_package = ".;streamIO";

message ServerBase{
  uint32 id = 1;
  bool leader = 2;
  string addr = 3;
}

message StreamServer{
  ServerBase base = 1;
}

message MetaServer {
  ServerBase base = 1;
}

message StreamInfo {
  int64 id = 1;
  string name = 2;
  int64 begin = 3;
  int64 end = 4;
}


//stream operator
message AppendStreamRequest{
  string name = 1;
  int64 offset = 2;
  bytes data = 3;
}

message AppendStreamResponse{
  enum Status {
    ok = 0;
    OffsetError = 1;
  }
  Status status = 1;
  int64 offset = 2;
}

message ReadStreamRequest {
  string Name = 1;
  int64 Offset = 2;
  int32 Length = 3;
  bool Watch = 4;
}


//meta-server

message CreateStreamRequest{
  string name = 1;
}

message CreateStreamResponse{
  StreamInfo info = 1;
  string  error = 2;
}

message GetStreamInfoRequest {
  string Name = 1;
}

message GetStreamInfoResponse{
  StreamInfo Info = 1;
  string Error = 2;
}

message SetStreamReadOffsetRequest{
  message Offset{
    int64 session_id = 1;
    int64 stream_id = 2;
    int64 offset = 3;
  }
  repeated Offset offsets = 1;
}

message SetStreamReadOffsetResponse{
  enum Status{
    OK = 0;
    Conflict = 1;
  }
  Status status = 1;
}

message GetStreamReadOffsetRequest{
  int64 session_id = 1;
  int64 stream_id = 2;
}