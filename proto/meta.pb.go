// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: streamIO/proto/meta.proto

package proto

import (
	context "context"
	store "github.com/akzj/streamIO/meta-server/store"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListStreamServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*store.StreamServerInfoItem `protobuf:"bytes,1,rep,name=Items,proto3" json:"Items,omitempty"`
}

func (x *ListStreamServerResponse) Reset() {
	*x = ListStreamServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamServerResponse) ProtoMessage() {}

func (x *ListStreamServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamServerResponse.ProtoReflect.Descriptor instead.
func (*ListStreamServerResponse) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{0}
}

func (x *ListStreamServerResponse) GetItems() []*store.StreamServerInfoItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type AddStreamServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamServerInfoItem *store.StreamServerInfoItem `protobuf:"bytes,1,opt,name=stream_server_info_item,json=streamServerInfoItem,proto3" json:"stream_server_info_item,omitempty"`
}

func (x *AddStreamServerRequest) Reset() {
	*x = AddStreamServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStreamServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStreamServerRequest) ProtoMessage() {}

func (x *AddStreamServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStreamServerRequest.ProtoReflect.Descriptor instead.
func (*AddStreamServerRequest) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{1}
}

func (x *AddStreamServerRequest) GetStreamServerInfoItem() *store.StreamServerInfoItem {
	if x != nil {
		return x.StreamServerInfoItem
	}
	return nil
}

type GetStreamServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamServerID int64 `protobuf:"varint,1,opt,name=streamServerID,proto3" json:"streamServerID,omitempty"`
}

func (x *GetStreamServerRequest) Reset() {
	*x = GetStreamServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamServerRequest) ProtoMessage() {}

func (x *GetStreamServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamServerRequest.ProtoReflect.Descriptor instead.
func (*GetStreamServerRequest) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{2}
}

func (x *GetStreamServerRequest) GetStreamServerID() int64 {
	if x != nil {
		return x.StreamServerID
	}
	return 0
}

type AddStreamServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamServerInfoItem *store.StreamServerInfoItem `protobuf:"bytes,1,opt,name=stream_server_info_item,json=streamServerInfoItem,proto3" json:"stream_server_info_item,omitempty"`
}

func (x *AddStreamServerResponse) Reset() {
	*x = AddStreamServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStreamServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStreamServerResponse) ProtoMessage() {}

func (x *AddStreamServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStreamServerResponse.ProtoReflect.Descriptor instead.
func (*AddStreamServerResponse) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{3}
}

func (x *AddStreamServerResponse) GetStreamServerInfoItem() *store.StreamServerInfoItem {
	if x != nil {
		return x.StreamServerInfoItem
	}
	return nil
}

type DeleteStreamServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamServerInfoItem *store.StreamServerInfoItem `protobuf:"bytes,1,opt,name=stream_server_info_item,json=streamServerInfoItem,proto3" json:"stream_server_info_item,omitempty"`
}

func (x *DeleteStreamServerRequest) Reset() {
	*x = DeleteStreamServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStreamServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStreamServerRequest) ProtoMessage() {}

func (x *DeleteStreamServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStreamServerRequest.ProtoReflect.Descriptor instead.
func (*DeleteStreamServerRequest) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteStreamServerRequest) GetStreamServerInfoItem() *store.StreamServerInfoItem {
	if x != nil {
		return x.StreamServerInfoItem
	}
	return nil
}

type CreateStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateStreamRequest) Reset() {
	*x = CreateStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStreamRequest) ProtoMessage() {}

func (x *CreateStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStreamRequest.ProtoReflect.Descriptor instead.
func (*CreateStreamRequest) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{5}
}

func (x *CreateStreamRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *store.StreamInfoItem `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *CreateStreamResponse) Reset() {
	*x = CreateStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStreamResponse) ProtoMessage() {}

func (x *CreateStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStreamResponse.ProtoReflect.Descriptor instead.
func (*CreateStreamResponse) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{6}
}

func (x *CreateStreamResponse) GetInfo() *store.StreamInfoItem {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetStreamInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *GetStreamInfoRequest) Reset() {
	*x = GetStreamInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamInfoRequest) ProtoMessage() {}

func (x *GetStreamInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamInfoRequest.ProtoReflect.Descriptor instead.
func (*GetStreamInfoRequest) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{7}
}

func (x *GetStreamInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetStreamInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info   *store.StreamInfoItem `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	Create bool                  `protobuf:"varint,2,opt,name=create,proto3" json:"create,omitempty"`
}

func (x *GetStreamInfoResponse) Reset() {
	*x = GetStreamInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamInfoResponse) ProtoMessage() {}

func (x *GetStreamInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStreamInfoResponse) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{8}
}

func (x *GetStreamInfoResponse) GetInfo() *store.StreamInfoItem {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetStreamInfoResponse) GetCreate() bool {
	if x != nil {
		return x.Create
	}
	return false
}

type SetStreamReadOffsetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SSOffsets []*store.SSOffsetItem `protobuf:"bytes,1,rep,name=SSOffsets,proto3" json:"SSOffsets,omitempty"`
}

func (x *SetStreamReadOffsetRequest) Reset() {
	*x = SetStreamReadOffsetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStreamReadOffsetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStreamReadOffsetRequest) ProtoMessage() {}

func (x *SetStreamReadOffsetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStreamReadOffsetRequest.ProtoReflect.Descriptor instead.
func (*SetStreamReadOffsetRequest) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{9}
}

func (x *SetStreamReadOffsetRequest) GetSSOffsets() []*store.SSOffsetItem {
	if x != nil {
		return x.SSOffsets
	}
	return nil
}

type GetStreamReadOffsetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId int64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	StreamId  int64 `protobuf:"varint,2,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
}

func (x *GetStreamReadOffsetRequest) Reset() {
	*x = GetStreamReadOffsetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamReadOffsetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamReadOffsetRequest) ProtoMessage() {}

func (x *GetStreamReadOffsetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamReadOffsetRequest.ProtoReflect.Descriptor instead.
func (*GetStreamReadOffsetRequest) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{10}
}

func (x *GetStreamReadOffsetRequest) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *GetStreamReadOffsetRequest) GetStreamId() int64 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

type GetStreamReadOffsetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SSOffset *store.SSOffsetItem `protobuf:"bytes,1,opt,name=SSOffset,proto3" json:"SSOffset,omitempty"`
}

func (x *GetStreamReadOffsetResponse) Reset() {
	*x = GetStreamReadOffsetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamReadOffsetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamReadOffsetResponse) ProtoMessage() {}

func (x *GetStreamReadOffsetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamReadOffsetResponse.ProtoReflect.Descriptor instead.
func (*GetStreamReadOffsetResponse) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{11}
}

func (x *GetStreamReadOffsetResponse) GetSSOffset() *store.SSOffsetItem {
	if x != nil {
		return x.SSOffset
	}
	return nil
}

type GetOrCreateMQTTClientSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientIdentifier string `protobuf:"bytes,2,opt,name=client_identifier,json=clientIdentifier,proto3" json:"client_identifier,omitempty"`
}

func (x *GetOrCreateMQTTClientSessionRequest) Reset() {
	*x = GetOrCreateMQTTClientSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrCreateMQTTClientSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrCreateMQTTClientSessionRequest) ProtoMessage() {}

func (x *GetOrCreateMQTTClientSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrCreateMQTTClientSessionRequest.ProtoReflect.Descriptor instead.
func (*GetOrCreateMQTTClientSessionRequest) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{12}
}

func (x *GetOrCreateMQTTClientSessionRequest) GetClientIdentifier() string {
	if x != nil {
		return x.ClientIdentifier
	}
	return ""
}

type GetOrCreateMQTTClientSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionItem *store.MQTTSessionItem `protobuf:"bytes,1,opt,name=sessionItem,proto3" json:"sessionItem,omitempty"`
	Create      bool                   `protobuf:"varint,2,opt,name=Create,proto3" json:"Create,omitempty"`
}

func (x *GetOrCreateMQTTClientSessionResponse) Reset() {
	*x = GetOrCreateMQTTClientSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrCreateMQTTClientSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrCreateMQTTClientSessionResponse) ProtoMessage() {}

func (x *GetOrCreateMQTTClientSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrCreateMQTTClientSessionResponse.ProtoReflect.Descriptor instead.
func (*GetOrCreateMQTTClientSessionResponse) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{13}
}

func (x *GetOrCreateMQTTClientSessionResponse) GetSessionItem() *store.MQTTSessionItem {
	if x != nil {
		return x.SessionItem
	}
	return nil
}

func (x *GetOrCreateMQTTClientSessionResponse) GetCreate() bool {
	if x != nil {
		return x.Create
	}
	return false
}

type DeleteMQTTClientSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientIdentifier string `protobuf:"bytes,1,opt,name=client_identifier,json=clientIdentifier,proto3" json:"client_identifier,omitempty"`
}

func (x *DeleteMQTTClientSessionRequest) Reset() {
	*x = DeleteMQTTClientSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMQTTClientSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMQTTClientSessionRequest) ProtoMessage() {}

func (x *DeleteMQTTClientSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMQTTClientSessionRequest.ProtoReflect.Descriptor instead.
func (*DeleteMQTTClientSessionRequest) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteMQTTClientSessionRequest) GetClientIdentifier() string {
	if x != nil {
		return x.ClientIdentifier
	}
	return ""
}

type DeleteMQTTClientSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionItem *store.MQTTSessionItem `protobuf:"bytes,1,opt,name=sessionItem,proto3" json:"sessionItem,omitempty"`
}

func (x *DeleteMQTTClientSessionResponse) Reset() {
	*x = DeleteMQTTClientSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMQTTClientSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMQTTClientSessionResponse) ProtoMessage() {}

func (x *DeleteMQTTClientSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMQTTClientSessionResponse.ProtoReflect.Descriptor instead.
func (*DeleteMQTTClientSessionResponse) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteMQTTClientSessionResponse) GetSessionItem() *store.MQTTSessionItem {
	if x != nil {
		return x.SessionItem
	}
	return nil
}

type UpdateMQTTClientSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientIdentifier string           `protobuf:"bytes,1,opt,name=client_identifier,json=clientIdentifier,proto3" json:"client_identifier,omitempty"`
	Subscribe        map[string]int32 `protobuf:"bytes,2,rep,name=subscribe,proto3" json:"subscribe,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	UnSubscribe      []string         `protobuf:"bytes,3,rep,name=unSubscribe,proto3" json:"unSubscribe,omitempty"`
}

func (x *UpdateMQTTClientSessionRequest) Reset() {
	*x = UpdateMQTTClientSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamIO_proto_meta_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMQTTClientSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMQTTClientSessionRequest) ProtoMessage() {}

func (x *UpdateMQTTClientSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamIO_proto_meta_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMQTTClientSessionRequest.ProtoReflect.Descriptor instead.
func (*UpdateMQTTClientSessionRequest) Descriptor() ([]byte, []int) {
	return file_streamIO_proto_meta_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateMQTTClientSessionRequest) GetClientIdentifier() string {
	if x != nil {
		return x.ClientIdentifier
	}
	return ""
}

func (x *UpdateMQTTClientSessionRequest) GetSubscribe() map[string]int32 {
	if x != nil {
		return x.Subscribe
	}
	return nil
}

func (x *UpdateMQTTClientSessionRequest) GetUnSubscribe() []string {
	if x != nil {
		return x.UnSubscribe
	}
	return nil
}

var File_streamIO_proto_meta_proto protoreflect.FileDescriptor

var file_streamIO_proto_meta_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x4f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x6b, 0x7a, 0x6a, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x4f, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x66, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x17, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x40, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x22, 0x67, 0x0a, 0x17, 0x41, 0x64,
	0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x17, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x14, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x74, 0x65, 0x6d, 0x22, 0x69, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4c, 0x0a, 0x17, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x29,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x2a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x54, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x22, 0x49, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x53, 0x53, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x53, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x53, 0x53, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x73, 0x22, 0x58, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x61, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x48, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x08,
	0x53, 0x53, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x53, 0x53, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x53,
	0x53, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x52, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x51, 0x54, 0x54, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b,
	0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x72, 0x0a, 0x24, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x51, 0x54, 0x54, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x51, 0x54, 0x54, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x22,
	0x4d, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x51, 0x54, 0x54, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x55,
	0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x51, 0x54, 0x54, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x51, 0x54, 0x54, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x81, 0x02, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x51, 0x54, 0x54, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x51, 0x54, 0x54, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x75, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x1a, 0x3c, 0x0a, 0x0e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x83, 0x09, 0x0a, 0x0c, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x15, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x12, 0x1a, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x49, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x51, 0x54, 0x54, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x51, 0x54, 0x54, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x51, 0x54, 0x54,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x51, 0x54, 0x54, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x51, 0x54, 0x54, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x51, 0x54, 0x54, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x51, 0x54,
	0x54, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x51, 0x54,
	0x54, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42,
	0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6b,
	0x7a, 0x6a, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x4f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_streamIO_proto_meta_proto_rawDescOnce sync.Once
	file_streamIO_proto_meta_proto_rawDescData = file_streamIO_proto_meta_proto_rawDesc
)

func file_streamIO_proto_meta_proto_rawDescGZIP() []byte {
	file_streamIO_proto_meta_proto_rawDescOnce.Do(func() {
		file_streamIO_proto_meta_proto_rawDescData = protoimpl.X.CompressGZIP(file_streamIO_proto_meta_proto_rawDescData)
	})
	return file_streamIO_proto_meta_proto_rawDescData
}

var file_streamIO_proto_meta_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_streamIO_proto_meta_proto_goTypes = []interface{}{
	(*ListStreamServerResponse)(nil),             // 0: proto.ListStreamServerResponse
	(*AddStreamServerRequest)(nil),               // 1: proto.AddStreamServerRequest
	(*GetStreamServerRequest)(nil),               // 2: proto.GetStreamServerRequest
	(*AddStreamServerResponse)(nil),              // 3: proto.AddStreamServerResponse
	(*DeleteStreamServerRequest)(nil),            // 4: proto.DeleteStreamServerRequest
	(*CreateStreamRequest)(nil),                  // 5: proto.CreateStreamRequest
	(*CreateStreamResponse)(nil),                 // 6: proto.CreateStreamResponse
	(*GetStreamInfoRequest)(nil),                 // 7: proto.GetStreamInfoRequest
	(*GetStreamInfoResponse)(nil),                // 8: proto.GetStreamInfoResponse
	(*SetStreamReadOffsetRequest)(nil),           // 9: proto.SetStreamReadOffsetRequest
	(*GetStreamReadOffsetRequest)(nil),           // 10: proto.GetStreamReadOffsetRequest
	(*GetStreamReadOffsetResponse)(nil),          // 11: proto.GetStreamReadOffsetResponse
	(*GetOrCreateMQTTClientSessionRequest)(nil),  // 12: proto.GetOrCreateMQTTClientSessionRequest
	(*GetOrCreateMQTTClientSessionResponse)(nil), // 13: proto.GetOrCreateMQTTClientSessionResponse
	(*DeleteMQTTClientSessionRequest)(nil),       // 14: proto.DeleteMQTTClientSessionRequest
	(*DeleteMQTTClientSessionResponse)(nil),      // 15: proto.DeleteMQTTClientSessionResponse
	(*UpdateMQTTClientSessionRequest)(nil),       // 16: proto.UpdateMQTTClientSessionRequest
	nil,                                          // 17: proto.UpdateMQTTClientSessionRequest.SubscribeEntry
	(*store.StreamServerInfoItem)(nil),           // 18: StreamServerInfoItem
	(*store.StreamInfoItem)(nil),                 // 19: StreamInfoItem
	(*store.SSOffsetItem)(nil),                   // 20: SSOffsetItem
	(*store.MQTTSessionItem)(nil),                // 21: MQTTSessionItem
	(*empty.Empty)(nil),                          // 22: google.protobuf.Empty
	(*store.StreamServerHeartbeatItem)(nil),      // 23: StreamServerHeartbeatItem
}
var file_streamIO_proto_meta_proto_depIdxs = []int32{
	18, // 0: proto.ListStreamServerResponse.Items:type_name -> StreamServerInfoItem
	18, // 1: proto.AddStreamServerRequest.stream_server_info_item:type_name -> StreamServerInfoItem
	18, // 2: proto.AddStreamServerResponse.stream_server_info_item:type_name -> StreamServerInfoItem
	18, // 3: proto.DeleteStreamServerRequest.stream_server_info_item:type_name -> StreamServerInfoItem
	19, // 4: proto.CreateStreamResponse.info:type_name -> StreamInfoItem
	19, // 5: proto.GetStreamInfoResponse.Info:type_name -> StreamInfoItem
	20, // 6: proto.SetStreamReadOffsetRequest.SSOffsets:type_name -> SSOffsetItem
	20, // 7: proto.GetStreamReadOffsetResponse.SSOffset:type_name -> SSOffsetItem
	21, // 8: proto.GetOrCreateMQTTClientSessionResponse.sessionItem:type_name -> MQTTSessionItem
	21, // 9: proto.DeleteMQTTClientSessionResponse.sessionItem:type_name -> MQTTSessionItem
	17, // 10: proto.UpdateMQTTClientSessionRequest.subscribe:type_name -> proto.UpdateMQTTClientSessionRequest.SubscribeEntry
	1,  // 11: proto.meta_service.AddStreamServer:input_type -> proto.AddStreamServerRequest
	22, // 12: proto.meta_service.ListStreamServer:input_type -> google.protobuf.Empty
	2,  // 13: proto.meta_service.GetStreamServer:input_type -> proto.GetStreamServerRequest
	4,  // 14: proto.meta_service.DeleteStreamServer:input_type -> proto.DeleteStreamServerRequest
	23, // 15: proto.meta_service.StreamServerHeartbeat:input_type -> StreamServerHeartbeatItem
	5,  // 16: proto.meta_service.CreateStream:input_type -> proto.CreateStreamRequest
	7,  // 17: proto.meta_service.GetOrCreateStream:input_type -> proto.GetStreamInfoRequest
	7,  // 18: proto.meta_service.GetStreamInfo:input_type -> proto.GetStreamInfoRequest
	9,  // 19: proto.meta_service.SetStreamReadOffset:input_type -> proto.SetStreamReadOffsetRequest
	10, // 20: proto.meta_service.GetStreamReadOffset:input_type -> proto.GetStreamReadOffsetRequest
	12, // 21: proto.meta_service.GetOrCreateMQTTClientSession:input_type -> proto.GetOrCreateMQTTClientSessionRequest
	14, // 22: proto.meta_service.DeleteMQTTClientSession:input_type -> proto.DeleteMQTTClientSessionRequest
	16, // 23: proto.meta_service.UpdateMQTTClientSession:input_type -> proto.UpdateMQTTClientSessionRequest
	3,  // 24: proto.meta_service.AddStreamServer:output_type -> proto.AddStreamServerResponse
	0,  // 25: proto.meta_service.ListStreamServer:output_type -> proto.ListStreamServerResponse
	18, // 26: proto.meta_service.GetStreamServer:output_type -> StreamServerInfoItem
	22, // 27: proto.meta_service.DeleteStreamServer:output_type -> google.protobuf.Empty
	22, // 28: proto.meta_service.StreamServerHeartbeat:output_type -> google.protobuf.Empty
	6,  // 29: proto.meta_service.CreateStream:output_type -> proto.CreateStreamResponse
	8,  // 30: proto.meta_service.GetOrCreateStream:output_type -> proto.GetStreamInfoResponse
	8,  // 31: proto.meta_service.GetStreamInfo:output_type -> proto.GetStreamInfoResponse
	22, // 32: proto.meta_service.SetStreamReadOffset:output_type -> google.protobuf.Empty
	11, // 33: proto.meta_service.GetStreamReadOffset:output_type -> proto.GetStreamReadOffsetResponse
	13, // 34: proto.meta_service.GetOrCreateMQTTClientSession:output_type -> proto.GetOrCreateMQTTClientSessionResponse
	15, // 35: proto.meta_service.DeleteMQTTClientSession:output_type -> proto.DeleteMQTTClientSessionResponse
	22, // 36: proto.meta_service.UpdateMQTTClientSession:output_type -> google.protobuf.Empty
	24, // [24:37] is the sub-list for method output_type
	11, // [11:24] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_streamIO_proto_meta_proto_init() }
func file_streamIO_proto_meta_proto_init() {
	if File_streamIO_proto_meta_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_streamIO_proto_meta_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStreamServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStreamServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStreamServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStreamReadOffsetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamReadOffsetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamReadOffsetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrCreateMQTTClientSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrCreateMQTTClientSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMQTTClientSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMQTTClientSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamIO_proto_meta_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMQTTClientSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_streamIO_proto_meta_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_streamIO_proto_meta_proto_goTypes,
		DependencyIndexes: file_streamIO_proto_meta_proto_depIdxs,
		MessageInfos:      file_streamIO_proto_meta_proto_msgTypes,
	}.Build()
	File_streamIO_proto_meta_proto = out.File
	file_streamIO_proto_meta_proto_rawDesc = nil
	file_streamIO_proto_meta_proto_goTypes = nil
	file_streamIO_proto_meta_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MetaServiceClient is the client API for MetaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetaServiceClient interface {
	AddStreamServer(ctx context.Context, in *AddStreamServerRequest, opts ...grpc.CallOption) (*AddStreamServerResponse, error)
	ListStreamServer(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListStreamServerResponse, error)
	GetStreamServer(ctx context.Context, in *GetStreamServerRequest, opts ...grpc.CallOption) (*store.StreamServerInfoItem, error)
	DeleteStreamServer(ctx context.Context, in *DeleteStreamServerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	StreamServerHeartbeat(ctx context.Context, opts ...grpc.CallOption) (MetaService_StreamServerHeartbeatClient, error)
	CreateStream(ctx context.Context, in *CreateStreamRequest, opts ...grpc.CallOption) (*CreateStreamResponse, error)
	GetOrCreateStream(ctx context.Context, in *GetStreamInfoRequest, opts ...grpc.CallOption) (*GetStreamInfoResponse, error)
	GetStreamInfo(ctx context.Context, in *GetStreamInfoRequest, opts ...grpc.CallOption) (*GetStreamInfoResponse, error)
	SetStreamReadOffset(ctx context.Context, in *SetStreamReadOffsetRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetStreamReadOffset(ctx context.Context, in *GetStreamReadOffsetRequest, opts ...grpc.CallOption) (*GetStreamReadOffsetResponse, error)
	//mqtt
	GetOrCreateMQTTClientSession(ctx context.Context, in *GetOrCreateMQTTClientSessionRequest, opts ...grpc.CallOption) (*GetOrCreateMQTTClientSessionResponse, error)
	DeleteMQTTClientSession(ctx context.Context, in *DeleteMQTTClientSessionRequest, opts ...grpc.CallOption) (*DeleteMQTTClientSessionResponse, error)
	UpdateMQTTClientSession(ctx context.Context, in *UpdateMQTTClientSessionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type metaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMetaServiceClient(cc grpc.ClientConnInterface) MetaServiceClient {
	return &metaServiceClient{cc}
}

func (c *metaServiceClient) AddStreamServer(ctx context.Context, in *AddStreamServerRequest, opts ...grpc.CallOption) (*AddStreamServerResponse, error) {
	out := new(AddStreamServerResponse)
	err := c.cc.Invoke(ctx, "/proto.meta_service/AddStreamServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaServiceClient) ListStreamServer(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListStreamServerResponse, error) {
	out := new(ListStreamServerResponse)
	err := c.cc.Invoke(ctx, "/proto.meta_service/ListStreamServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaServiceClient) GetStreamServer(ctx context.Context, in *GetStreamServerRequest, opts ...grpc.CallOption) (*store.StreamServerInfoItem, error) {
	out := new(store.StreamServerInfoItem)
	err := c.cc.Invoke(ctx, "/proto.meta_service/GetStreamServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaServiceClient) DeleteStreamServer(ctx context.Context, in *DeleteStreamServerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.meta_service/DeleteStreamServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaServiceClient) StreamServerHeartbeat(ctx context.Context, opts ...grpc.CallOption) (MetaService_StreamServerHeartbeatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MetaService_serviceDesc.Streams[0], "/proto.meta_service/StreamServerHeartbeat", opts...)
	if err != nil {
		return nil, err
	}
	x := &metaServiceStreamServerHeartbeatClient{stream}
	return x, nil
}

type MetaService_StreamServerHeartbeatClient interface {
	Send(*store.StreamServerHeartbeatItem) error
	Recv() (*empty.Empty, error)
	grpc.ClientStream
}

type metaServiceStreamServerHeartbeatClient struct {
	grpc.ClientStream
}

func (x *metaServiceStreamServerHeartbeatClient) Send(m *store.StreamServerHeartbeatItem) error {
	return x.ClientStream.SendMsg(m)
}

func (x *metaServiceStreamServerHeartbeatClient) Recv() (*empty.Empty, error) {
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *metaServiceClient) CreateStream(ctx context.Context, in *CreateStreamRequest, opts ...grpc.CallOption) (*CreateStreamResponse, error) {
	out := new(CreateStreamResponse)
	err := c.cc.Invoke(ctx, "/proto.meta_service/CreateStream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaServiceClient) GetOrCreateStream(ctx context.Context, in *GetStreamInfoRequest, opts ...grpc.CallOption) (*GetStreamInfoResponse, error) {
	out := new(GetStreamInfoResponse)
	err := c.cc.Invoke(ctx, "/proto.meta_service/GetOrCreateStream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaServiceClient) GetStreamInfo(ctx context.Context, in *GetStreamInfoRequest, opts ...grpc.CallOption) (*GetStreamInfoResponse, error) {
	out := new(GetStreamInfoResponse)
	err := c.cc.Invoke(ctx, "/proto.meta_service/GetStreamInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaServiceClient) SetStreamReadOffset(ctx context.Context, in *SetStreamReadOffsetRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.meta_service/SetStreamReadOffset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaServiceClient) GetStreamReadOffset(ctx context.Context, in *GetStreamReadOffsetRequest, opts ...grpc.CallOption) (*GetStreamReadOffsetResponse, error) {
	out := new(GetStreamReadOffsetResponse)
	err := c.cc.Invoke(ctx, "/proto.meta_service/GetStreamReadOffset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaServiceClient) GetOrCreateMQTTClientSession(ctx context.Context, in *GetOrCreateMQTTClientSessionRequest, opts ...grpc.CallOption) (*GetOrCreateMQTTClientSessionResponse, error) {
	out := new(GetOrCreateMQTTClientSessionResponse)
	err := c.cc.Invoke(ctx, "/proto.meta_service/GetOrCreateMQTTClientSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaServiceClient) DeleteMQTTClientSession(ctx context.Context, in *DeleteMQTTClientSessionRequest, opts ...grpc.CallOption) (*DeleteMQTTClientSessionResponse, error) {
	out := new(DeleteMQTTClientSessionResponse)
	err := c.cc.Invoke(ctx, "/proto.meta_service/DeleteMQTTClientSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaServiceClient) UpdateMQTTClientSession(ctx context.Context, in *UpdateMQTTClientSessionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.meta_service/UpdateMQTTClientSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetaServiceServer is the server API for MetaService service.
type MetaServiceServer interface {
	AddStreamServer(context.Context, *AddStreamServerRequest) (*AddStreamServerResponse, error)
	ListStreamServer(context.Context, *empty.Empty) (*ListStreamServerResponse, error)
	GetStreamServer(context.Context, *GetStreamServerRequest) (*store.StreamServerInfoItem, error)
	DeleteStreamServer(context.Context, *DeleteStreamServerRequest) (*empty.Empty, error)
	StreamServerHeartbeat(MetaService_StreamServerHeartbeatServer) error
	CreateStream(context.Context, *CreateStreamRequest) (*CreateStreamResponse, error)
	GetOrCreateStream(context.Context, *GetStreamInfoRequest) (*GetStreamInfoResponse, error)
	GetStreamInfo(context.Context, *GetStreamInfoRequest) (*GetStreamInfoResponse, error)
	SetStreamReadOffset(context.Context, *SetStreamReadOffsetRequest) (*empty.Empty, error)
	GetStreamReadOffset(context.Context, *GetStreamReadOffsetRequest) (*GetStreamReadOffsetResponse, error)
	//mqtt
	GetOrCreateMQTTClientSession(context.Context, *GetOrCreateMQTTClientSessionRequest) (*GetOrCreateMQTTClientSessionResponse, error)
	DeleteMQTTClientSession(context.Context, *DeleteMQTTClientSessionRequest) (*DeleteMQTTClientSessionResponse, error)
	UpdateMQTTClientSession(context.Context, *UpdateMQTTClientSessionRequest) (*empty.Empty, error)
}

// UnimplementedMetaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMetaServiceServer struct {
}

func (*UnimplementedMetaServiceServer) AddStreamServer(context.Context, *AddStreamServerRequest) (*AddStreamServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddStreamServer not implemented")
}
func (*UnimplementedMetaServiceServer) ListStreamServer(context.Context, *empty.Empty) (*ListStreamServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStreamServer not implemented")
}
func (*UnimplementedMetaServiceServer) GetStreamServer(context.Context, *GetStreamServerRequest) (*store.StreamServerInfoItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStreamServer not implemented")
}
func (*UnimplementedMetaServiceServer) DeleteStreamServer(context.Context, *DeleteStreamServerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStreamServer not implemented")
}
func (*UnimplementedMetaServiceServer) StreamServerHeartbeat(MetaService_StreamServerHeartbeatServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamServerHeartbeat not implemented")
}
func (*UnimplementedMetaServiceServer) CreateStream(context.Context, *CreateStreamRequest) (*CreateStreamResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStream not implemented")
}
func (*UnimplementedMetaServiceServer) GetOrCreateStream(context.Context, *GetStreamInfoRequest) (*GetStreamInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrCreateStream not implemented")
}
func (*UnimplementedMetaServiceServer) GetStreamInfo(context.Context, *GetStreamInfoRequest) (*GetStreamInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStreamInfo not implemented")
}
func (*UnimplementedMetaServiceServer) SetStreamReadOffset(context.Context, *SetStreamReadOffsetRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetStreamReadOffset not implemented")
}
func (*UnimplementedMetaServiceServer) GetStreamReadOffset(context.Context, *GetStreamReadOffsetRequest) (*GetStreamReadOffsetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStreamReadOffset not implemented")
}
func (*UnimplementedMetaServiceServer) GetOrCreateMQTTClientSession(context.Context, *GetOrCreateMQTTClientSessionRequest) (*GetOrCreateMQTTClientSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrCreateMQTTClientSession not implemented")
}
func (*UnimplementedMetaServiceServer) DeleteMQTTClientSession(context.Context, *DeleteMQTTClientSessionRequest) (*DeleteMQTTClientSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMQTTClientSession not implemented")
}
func (*UnimplementedMetaServiceServer) UpdateMQTTClientSession(context.Context, *UpdateMQTTClientSessionRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMQTTClientSession not implemented")
}

func RegisterMetaServiceServer(s *grpc.Server, srv MetaServiceServer) {
	s.RegisterService(&_MetaService_serviceDesc, srv)
}

func _MetaService_AddStreamServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddStreamServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServiceServer).AddStreamServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.meta_service/AddStreamServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServiceServer).AddStreamServer(ctx, req.(*AddStreamServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaService_ListStreamServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServiceServer).ListStreamServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.meta_service/ListStreamServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServiceServer).ListStreamServer(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaService_GetStreamServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStreamServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServiceServer).GetStreamServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.meta_service/GetStreamServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServiceServer).GetStreamServer(ctx, req.(*GetStreamServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaService_DeleteStreamServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStreamServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServiceServer).DeleteStreamServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.meta_service/DeleteStreamServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServiceServer).DeleteStreamServer(ctx, req.(*DeleteStreamServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaService_StreamServerHeartbeat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MetaServiceServer).StreamServerHeartbeat(&metaServiceStreamServerHeartbeatServer{stream})
}

type MetaService_StreamServerHeartbeatServer interface {
	Send(*empty.Empty) error
	Recv() (*store.StreamServerHeartbeatItem, error)
	grpc.ServerStream
}

type metaServiceStreamServerHeartbeatServer struct {
	grpc.ServerStream
}

func (x *metaServiceStreamServerHeartbeatServer) Send(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *metaServiceStreamServerHeartbeatServer) Recv() (*store.StreamServerHeartbeatItem, error) {
	m := new(store.StreamServerHeartbeatItem)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _MetaService_CreateStream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServiceServer).CreateStream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.meta_service/CreateStream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServiceServer).CreateStream(ctx, req.(*CreateStreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaService_GetOrCreateStream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStreamInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServiceServer).GetOrCreateStream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.meta_service/GetOrCreateStream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServiceServer).GetOrCreateStream(ctx, req.(*GetStreamInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaService_GetStreamInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStreamInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServiceServer).GetStreamInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.meta_service/GetStreamInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServiceServer).GetStreamInfo(ctx, req.(*GetStreamInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaService_SetStreamReadOffset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetStreamReadOffsetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServiceServer).SetStreamReadOffset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.meta_service/SetStreamReadOffset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServiceServer).SetStreamReadOffset(ctx, req.(*SetStreamReadOffsetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaService_GetStreamReadOffset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStreamReadOffsetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServiceServer).GetStreamReadOffset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.meta_service/GetStreamReadOffset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServiceServer).GetStreamReadOffset(ctx, req.(*GetStreamReadOffsetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaService_GetOrCreateMQTTClientSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrCreateMQTTClientSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServiceServer).GetOrCreateMQTTClientSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.meta_service/GetOrCreateMQTTClientSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServiceServer).GetOrCreateMQTTClientSession(ctx, req.(*GetOrCreateMQTTClientSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaService_DeleteMQTTClientSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMQTTClientSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServiceServer).DeleteMQTTClientSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.meta_service/DeleteMQTTClientSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServiceServer).DeleteMQTTClientSession(ctx, req.(*DeleteMQTTClientSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaService_UpdateMQTTClientSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMQTTClientSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServiceServer).UpdateMQTTClientSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.meta_service/UpdateMQTTClientSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServiceServer).UpdateMQTTClientSession(ctx, req.(*UpdateMQTTClientSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.meta_service",
	HandlerType: (*MetaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddStreamServer",
			Handler:    _MetaService_AddStreamServer_Handler,
		},
		{
			MethodName: "ListStreamServer",
			Handler:    _MetaService_ListStreamServer_Handler,
		},
		{
			MethodName: "GetStreamServer",
			Handler:    _MetaService_GetStreamServer_Handler,
		},
		{
			MethodName: "DeleteStreamServer",
			Handler:    _MetaService_DeleteStreamServer_Handler,
		},
		{
			MethodName: "CreateStream",
			Handler:    _MetaService_CreateStream_Handler,
		},
		{
			MethodName: "GetOrCreateStream",
			Handler:    _MetaService_GetOrCreateStream_Handler,
		},
		{
			MethodName: "GetStreamInfo",
			Handler:    _MetaService_GetStreamInfo_Handler,
		},
		{
			MethodName: "SetStreamReadOffset",
			Handler:    _MetaService_SetStreamReadOffset_Handler,
		},
		{
			MethodName: "GetStreamReadOffset",
			Handler:    _MetaService_GetStreamReadOffset_Handler,
		},
		{
			MethodName: "GetOrCreateMQTTClientSession",
			Handler:    _MetaService_GetOrCreateMQTTClientSession_Handler,
		},
		{
			MethodName: "DeleteMQTTClientSession",
			Handler:    _MetaService_DeleteMQTTClientSession_Handler,
		},
		{
			MethodName: "UpdateMQTTClientSession",
			Handler:    _MetaService_UpdateMQTTClientSession_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamServerHeartbeat",
			Handler:       _MetaService_StreamServerHeartbeat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "streamIO/proto/meta.proto",
}
