syntax = "proto3";
import "github.com/akzj/streamIO/meta-server/store/items.proto";
import "google/protobuf/empty.proto";
package proto;

option go_package = "github.com/akzj/streamIO/proto;proto";

//meta-server


message ListStreamServerResponse{
  repeated StreamServerInfoItem Items = 1;
}

message AddStreamServerRequest{
  StreamServerInfoItem stream_server_info_item = 1;
}

message AddStreamServerResponse{
  StreamServerInfoItem stream_server_info_item = 1;
}

message DeleteStreamServerRequest{
  StreamServerInfoItem stream_server_info_item = 1;
}

message CreateStreamRequest{
  string name = 1;
}

message CreateStreamResponse{
  StreamInfoItem info = 1;
}

message GetStreamInfoRequest {
  string Name = 1;
}

message GetStreamInfoResponse{
  StreamInfoItem Info = 1;
}

message SetStreamReadOffsetRequest{
  repeated SSOffsetItem SSOffsets = 1;
}


message GetStreamReadOffsetRequest{
  int64 session_id = 1;
  int64 stream_id = 2;
}

message GetStreamReadOffsetResponse{
  int64 offset = 1;
  SSOffsetItem SSOffset = 2;
}


service meta_service{
  rpc AddStreamServer(AddStreamServerRequest)returns (AddStreamServerResponse){}
  rpc ListStreamServer(google.protobuf.Empty)returns(ListStreamServerResponse){}
  rpc DeleteStreamServer(DeleteStreamServerRequest)returns(google.protobuf.Empty){}
  rpc StreamServerHeartbeat(stream StreamServerHeartbeatItem)returns(google.protobuf.Empty){}
  rpc CreateStream(CreateStreamRequest)returns(CreateStreamResponse){}
  rpc GetStreamInfo(GetStreamInfoRequest)returns(GetStreamInfoResponse){}
  rpc SetStreamReadOffset(SetStreamReadOffsetRequest)returns(google.protobuf.Empty){}
  rpc GetStreamReadOffset(GetStreamReadOffsetRequest)returns(GetStreamReadOffsetResponse){}
}
